; Test config file
; comments with a # imply i haven't coded parsing them yet, probably just have not encountered yet.

[model]
name = nstx 204202_jul19       ; Label...
rng_seed = 42           ; Random Number Generator seed

; npert: field perturbation choice:
;  	0=none
;  	1=read alphas, compute displacement
;  	2=read displacement, compute alphas
npert = 2               ; pertubation mode (0 off, 2 enabled)
; field strength in kgauss, bkg
; [kG] from LRDFIT06 @ ~450ms
bkg = 5.72

; numerical equilibrium spdata read
; can set ripple zero with krip 0
; NOTE: still work in progress...
#krip = 0  ;  comment out for ripple, XXX, change this when find...
#kripsav = krip

; electrostatic potential amplitude, keV - from experiment
pamp  = 2.8
;  potential profile 1./scale-length, see ptrb2
rprof = 3.765

; Energy Conservation
#dele = 5

[input]
spdata_file = INPUT/spdata         ; equilibrium data filename
#alphas_file = INPUT/alpha_3_9.dat  ; alpha data filename
displ_file  = INPUT/displ_4_5.dat  ; displacements data filename

[output]
; note initial_update_pdedp may change this to an input...
pdedp_file = pDEDP.AEP  ; pDEDP file name
bfield_file = p_bfield.plt      ; bfield plot data file
; optionally output a sparse compressed file, requires pdedp_sparse_file path
output_sparse = true
pdedp_sparse_file = pdedp.nz


[pdedp]
nruns = 10
compute_pdedp = true
; The following reads the initial pDEDP data from a file
; for the first time step, instead of reading
; from a configuration.
initial_update_pdedp_from_file = false

; Deposit on bins w/ resonant particles, improves stats
;   After nruns_pdedp beyond deposit_on_bins_after_fraction
;   Set to 0 or False to disable.
deposit_on_bins_after_fraction = 0.5

;Set duration of simulation 
pdedp_dtrun = 0.2 ; [ms]

;Set Micro time step for rescaling DE/dt and DP/dt kicks
pdedp_dtsamp = 17.854e-3 ; [ms]
pdedp_dtav = 1.0e-3 ; [ms]

; global - reduce number of samples to manageable size
pdedp_tskip = 2

; Time step in [ms] to update particle domain info
pdedp_otpup = 1.e-3

; Set energy range [Emin,Emax] in keV for this run.
;   Default: [1,110] keV
;pdedp_Emin = 2   ; [keV]
;pdedp_Emax = 125 ; [keV]

; Set number of bins in 5D phase space
;   Default [E,Pz,mu,DE,DPZ] -> [12,40,16,29,29]
;pdedp_nbinE  = 15
;pdedp_nbinPz = 39
;pdedp_nbinmu = 20
;pdedp_nbinDE = 39
;pdedp_nbinDPz= 39


; Flag pdedp_focusdep: when True, will check bin of each
; particle at deposition. If the bin doesnt contain
; resonant particles (DE,DP.ne.0) the particle
; will be thrown away and its E,Pz,mu re-extracted
; at re-deposition. This increases the statistics
; around resonances.
pdedp_focusdep = true

; Optimize (DE,DPz) range during the run when True
; Optimization is performed on the first run only to avoid
; excessive interpolations of the pDEDP probabilities.
; Suggestion: start with a small range for both DE and DPz
; and let the script expand it based on the actual maximum
; kicks recorded during the run.
pdedp_optimize = true

[perturbation]
falf = 13.3550 ; from NOVA analysis
ascale = 5.
alimit = 5.e-2	; remove from computation pol. harmonics whose
		; peak amplitude is smaller tham Alimit times
		; the max amplitude over all harmonics.
		; May save comp. time for modes with large
		; number of (small, negligible) poloidal harmonics.
global_scaling_factor = 3E-4
freq_scaling_factor = 1.
sng  = 2.5E-2,

[particle]

ekev = 200. 	; reference energy [keV]. 
		; This has to be >= pdedp_Emax.
	    	; NOTE: The time step for particle pushing scales ~1/sqrt(2*ekev),
		; 	so ekev can also be used to control the time step.
		;	In some cases, ekev has to be increased to guarantee a
		;	good accuracy of the orbits, e.g. in case of 
		;	"wiggling" equilibrium Bfield resulting from imperfect
		;	splines (especially near the LCFS).
nprt = 2000             ; number of particles
zprt = 1.
chrg = 1 ; 1 for ion, -1 for electron
prot = 2. ; proton mass in proton units

[particle_distribution]
; Settings e.g. for kinetic Poincare' plot,
; not yet implemented in this version of ORBIT.
; initial flux surface, will mul pw from equilib data
polo_scale = .7
; surface for Poincare, will mul pw from equilib data
p1_scale = .01
; surface for Poincare, will mul pw from equilib data
p2_scale = .99
;pitch
pchi = .4


[stochastic]
mubk_scale = 1.1  ; will later be * ekev,     mu*B0 in keV
emink = 20
emaxk = 40
dmubk = 2
nstoche = 80
nstochp = 80


; I beleive this is not used yet
; [collision]
; massb = 2.      ; background plasma mass
; chgb = 1.       ; background plasma charge
; imp = 0.        ; imp=1 impurity species, 0=none
; massi = 5.      ; impurity mass
; chgi = 5        ; impurity charge
; eion = 1.1      ; ion energy in kev for plots
